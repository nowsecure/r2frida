name: ci

env:
  R2V: 5.7.4

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Building Radare2
      run: ( git clone --depth=1 https://github.com/radareorg/radare2 && cd radare2 && sys/install.sh )
    - name: Building r2frida
      run: ./configure && make -j && sudo make install
    - name: Packaging
      run: make -C dist/debian
    - name: Pub
      uses: actions/upload-artifact@v2
      with:
        name: build-linux
        path: dist/debian/*.deb
  build-agent:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Building Radare2
      run: ( git clone --depth=1 https://github.com/radareorg/radare2 && cd radare2 && sys/install.sh )
    - name: Building r2frida
      run: ./configure && make -j && sudo make install
    - name: Pub
      uses: actions/upload-artifact@v2
      with:
        name: build-agent
        path: src/_agent.js
  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Building Radare2
      run: ( git clone --depth=1 https://github.com/radareorg/radare2 && cd radare2 && sys/install.sh )
    - name: Building r2frida
      run: ./configure && make -j && sudo make install
    - name: Packaging
      run: make -C dist/macos
    - name: Pub
      uses: actions/upload-artifact@v2
      with:
        if-no-files-found: error
        name: build-macos
        path: dist/macos/r2frida-*.pkg
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: 3.7.x
    - name: Preparing msvc toolchain
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64
    - name: dependencies
      shell: bash
      run: |
        pip install ninja meson wget
        choco install zip
    - name: install r2
      shell: bash
      run: |
        python -m wget https://github.com/radareorg/radare2/releases/download/${R2V}/radare2-${{env.R2V}}-w64.zip -o r2.zip
        unzip r2.zip
        mv radare2-${{env.R2V}}-w64 radare2 || mv radare2-w64-${{env.R2V}} radare2
        pwd
    - name: make
      shell: cmd
      run: |
        cd
        set PKG_CONFIG_PATH=%CD%\radare2\lib\pkgconfig
        set PATH=%CD%\radare2\bin;%PATH%
        set ARCH=x64
        git submodule update --init
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
        build.bat
        zip -r r2frida-${{env.R2V}}-w64.zip src\io_frida.dll
    - uses: actions/upload-artifact@v2
      with:
        if-no-files-found: error
        name: build-windows
        path: r2frida-${{env.R2V}}-w64.zip


  check_release:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    outputs:
      is_release: ${{ steps.release.outputs.is }}
      tag_name: ${{ steps.release.outputs.tag }}
    needs:
      - build-linux
      - build-macos
      - build-windows
      - build-script
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Download all git history and tags
      - name: Check if is a release
        run: git describe --exact-match --tags ${{ github.sha }} | awk 'BEGIN{tag="-";r="no"}/^[0-9]+\.[0-9]+/{tag=$0;r="yes"};END{print "::set-output name=is::"r;print "::set-output name=tag::"tag}'
        id: release
  release:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && needs.check_release.outputs.is_release == 'yes' }}
    needs:
      - check_release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Download all git history and tags
      - name: Extract r2f version
        run: echo "##[set-output name=branch;]$( ./configure -qV )"
        id: r2fv
      - name: Prepare release notes
        run: echo Release > ./RELEASE_NOTES.md
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: dist/artifacts
      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.check_release.outputs.tag_name }}
          release_name: ${{ steps.r2fv.outputs.branch }}
          body_path: ./RELEASE_NOTES.md
          draft: false
          prerelease: false
      - name: Upload asset for Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/artifacts/build-linux/r2frida_${{ steps.r2fv.outputs.branch }}_amd64.deb
          asset_name: r2frida_${{ steps.r2fv.outputs.branch }}_amd64.deb
          asset_content_type: application/vnd.debian.binary-package
      - name: Upload precompiled agent script
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/artifacts/build-agent/_agent.js
          asset_name: _agent.js
          asset_content_type: application/javascript
      - name: Upload asset for macOS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/artifacts/build-macos/r2frida-${{ steps.r2fv.outputs.branch }}-macos.zip
          asset_name: r2frida-${{ steps.r2fv.outputs.branch }}-macos.zip
          asset_content_type: application/zip
      - name: Upload asset for Windows (w64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/artifacts/build-windows/r2frida-${{env.R2V}}-w64.zip
          asset_name: r2frida-${{ steps.r2fv.outputs.branch }}-w64.zip
          asset_content_type: application/zip
      - name: Upload asset for Sleigh files
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/artifacts/build-linux/r2frida_sleigh-${{ steps.r2fv.outputs.branch }}.zip
          asset_name: r2frida_sleigh-${{ steps.r2fv.outputs.branch }}.zip
          asset_content_type: application/zip
